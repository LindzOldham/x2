import pyfits as py, numpy as np, pylab as pl
import indexTricks as iT
from scipy import ndimage

''' part one: Poisson noise '''
sci = py.open('/data/ljo31/Lens/SDSSJ1605+3811_F555W_sci.fits')[0].data.copy()
wht = py.open('/data/ljo31/Lens/SDSSJ1605+3811_F555W_wht.fits')[0].data.copy()


cut1 = sci[2190:2215,2200:2225]
cut2 = sci[2115:2140,2160:2180]
cut3 = sci[2200:2225,2330:2360]

wht1 = wht[2190:2215,2200:2225]
wht2 = wht[2115:2140,2160:2180]
wht3 = wht[2200:2225,2330:2360]

counts1 = cut1*wht1
var1 = np.var(counts1)/np.median(wht1)**2.

counts2 = cut2*wht2
var2 = np.var(counts2)/np.median(wht2)**2.

counts3 = cut3*wht3
var3 = np.var(counts3)/np.median(wht3)**2.


poisson_v = np.mean((var1,var2,var3))

from scipy import ndimage
im = py.open('/data/ljo31/Lens/SDSSJ1605*3811_F555W_sci_cutout_double.fits')[0].data.copy()
wht = py.open('/data/ljo31/Lens/SDSSJ1605+3811_F555W_wht_cutout_double.fits')[0].data.copy()

res = ndimage.filters.gaussian_filter(im*wht,sigma=2)
noise = 10**1.5
sn = np.where(res/noise > 7)
im2 = im*0.
im2[sn] = im[sn]
im2 = im2/100. + np.sqrt(poisson_v)
res2 = ndimage.filters.minimum_filter(im2,5)

pl.figure()
pl.imshow(res2)
pl.colorbar()

py.writeto('/data/ljo31/Lens/SDSSJ1605+3811_F555W_noise_cutout_double.fits',res2,clobber=True)



## I band

''' part one: Poisson noise '''
sci = py.open('/data/ljo31/Lens/SDSSJ1605+3811_F814W_sci.fits')[0].data.copy()
wht = py.open('/data/ljo31/Lens/SDSSJ1605+3811_F814W_wht.fits')[0].data.copy()


cut1 = sci[2190:2215,2200:2225]
cut2 = sci[2115:2140,2160:2180]
cut3 = sci[2200:2225,2330:2360]

wht1 = wht[2190:2215,2200:2225]
wht2 = wht[2115:2140,2160:2180]
wht3 = wht[2200:2225,2330:2360]

counts1 = cut1*wht1
var1 = np.var(counts1)/np.median(wht1)**2.

counts2 = cut2*wht2
var2 = np.var(counts2)/np.median(wht2)**2.

counts3 = cut3*wht3
var3 = np.var(counts3)/np.median(wht3)**2.


poisson_i = np.mean((var1,var2,var3))

im = py.open('/data/ljo31/Lens/SDSSJ1605+3811_F814W_sci_cutout_double.fits')[0].data.copy()
wht = py.open('/data/ljo31/Lens/SDSSJ1605+3811_F814W_wht_cutout_double.fits')[0].data.copy()


from scipy import ndimage
res = ndimage.filters.gaussian_filter(im*wht,sigma=2)
noise = 10**1.5
sn = np.where(res/noise > 7)
im2 = im*0.
im2[sn] = im[sn]
im2 = im2/100. + np.sqrt(poisson_i)
res2 = ndimage.filters.minimum_filter(im2,5)

pl.figure()
pl.imshow(res2)
pl.colorbar()

py.writeto('/data/ljo31/Lens/SDSSJ1605+3811_F814W_noise_cutout_double.fits',res2,clobber=True)
